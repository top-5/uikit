import { Node } from "yoga-layout/load";
export declare const setter: {
    positionType: (node: Node, input: "static" | "relative" | "absolute" | undefined) => void;
    positionTop: (node: Node, input: undefined | number | `${number}%`) => void;
    positionLeft: (node: Node, input: undefined | number | `${number}%`) => void;
    positionRight: (node: Node, input: undefined | number | `${number}%`) => void;
    positionBottom: (node: Node, input: undefined | number | `${number}%`) => void;
    alignContent: (node: Node, input: "auto" | "flex-start" | "center" | "flex-end" | "stretch" | "baseline" | "space-between" | "space-around" | "space-evenly" | undefined) => void;
    alignItems: (node: Node, input: "auto" | "flex-start" | "center" | "flex-end" | "stretch" | "baseline" | "space-between" | "space-around" | "space-evenly" | undefined) => void;
    alignSelf: (node: Node, input: "auto" | "flex-start" | "center" | "flex-end" | "stretch" | "baseline" | "space-between" | "space-around" | "space-evenly" | undefined) => void;
    flexDirection: (node: Node, input: "column" | "column-reverse" | "row" | "row-reverse" | undefined) => void;
    flexWrap: (node: Node, input: "no-wrap" | "wrap" | "wrap-reverse" | undefined) => void;
    justifyContent: (node: Node, input: "flex-start" | "center" | "flex-end" | "space-between" | "space-around" | "space-evenly" | undefined) => void;
    marginTop: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    marginLeft: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    marginRight: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    marginBottom: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    flexBasis: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    flexGrow: (node: Node, input: undefined | number) => void;
    flexShrink: (node: Node, input: undefined | number) => void;
    width: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    height: (node: Node, input: undefined | number | `${number}%` | "auto") => void;
    minWidth: (node: Node, input: undefined | number | `${number}%`) => void;
    minHeight: (node: Node, input: undefined | number | `${number}%`) => void;
    maxWidth: (node: Node, input: undefined | number | `${number}%`) => void;
    maxHeight: (node: Node, input: undefined | number | `${number}%`) => void;
    aspectRatio: (node: Node, input: undefined | number) => void;
    borderTopWidth: (node: Node, input: undefined | number) => void;
    borderLeftWidth: (node: Node, input: undefined | number) => void;
    borderRightWidth: (node: Node, input: undefined | number) => void;
    borderBottomWidth: (node: Node, input: undefined | number) => void;
    overflow: (node: Node, input: "visible" | "hidden" | "scroll" | undefined) => void;
    display: (node: Node, input: "flex" | "none" | undefined) => void;
    paddingTop: (node: Node, input: undefined | number | `${number}%`) => void;
    paddingLeft: (node: Node, input: undefined | number | `${number}%`) => void;
    paddingRight: (node: Node, input: undefined | number | `${number}%`) => void;
    paddingBottom: (node: Node, input: undefined | number | `${number}%`) => void;
    gapRow: (node: Node, input: undefined | number) => {
        unit: import("yoga-layout/load").Unit;
        value: number;
    };
    gapColumn: (node: Node, input: undefined | number) => {
        unit: import("yoga-layout/load").Unit;
        value: number;
    };
};
